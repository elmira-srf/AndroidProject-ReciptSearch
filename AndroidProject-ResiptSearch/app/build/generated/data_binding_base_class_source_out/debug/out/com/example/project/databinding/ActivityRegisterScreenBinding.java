// Generated by view binder compiler. Do not edit!
package com.example.azadehs_elmiras_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.azadehs_elmiras_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonSignUpId;

  @NonNull
  public final EditText etAgeId;

  @NonNull
  public final EditText etEmailRegisterId;

  @NonNull
  public final EditText etNameId;

  @NonNull
  public final EditText etPasswordConfirmId;

  @NonNull
  public final EditText etPasswordRegisterId;

  @NonNull
  public final TextView textView5;

  private ActivityRegisterScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonSignUpId, @NonNull EditText etAgeId,
      @NonNull EditText etEmailRegisterId, @NonNull EditText etNameId,
      @NonNull EditText etPasswordConfirmId, @NonNull EditText etPasswordRegisterId,
      @NonNull TextView textView5) {
    this.rootView = rootView;
    this.buttonSignUpId = buttonSignUpId;
    this.etAgeId = etAgeId;
    this.etEmailRegisterId = etEmailRegisterId;
    this.etNameId = etNameId;
    this.etPasswordConfirmId = etPasswordConfirmId;
    this.etPasswordRegisterId = etPasswordRegisterId;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSignUp_id;
      Button buttonSignUpId = ViewBindings.findChildViewById(rootView, id);
      if (buttonSignUpId == null) {
        break missingId;
      }

      id = R.id.etAge_Id;
      EditText etAgeId = ViewBindings.findChildViewById(rootView, id);
      if (etAgeId == null) {
        break missingId;
      }

      id = R.id.etEmailRegister_id;
      EditText etEmailRegisterId = ViewBindings.findChildViewById(rootView, id);
      if (etEmailRegisterId == null) {
        break missingId;
      }

      id = R.id.etName_id;
      EditText etNameId = ViewBindings.findChildViewById(rootView, id);
      if (etNameId == null) {
        break missingId;
      }

      id = R.id.etPasswordConfirm_id;
      EditText etPasswordConfirmId = ViewBindings.findChildViewById(rootView, id);
      if (etPasswordConfirmId == null) {
        break missingId;
      }

      id = R.id.etPasswordRegister_id;
      EditText etPasswordRegisterId = ViewBindings.findChildViewById(rootView, id);
      if (etPasswordRegisterId == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new ActivityRegisterScreenBinding((ConstraintLayout) rootView, buttonSignUpId, etAgeId,
          etEmailRegisterId, etNameId, etPasswordConfirmId, etPasswordRegisterId, textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
